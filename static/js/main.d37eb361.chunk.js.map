{"version":3,"sources":["Button.js","ColorTile.js","GameOver.js","constants.js","utility.js","Simon.js","index.js"],"names":["Button","_this$props","this","props","color","lit","onPress","react_default","a","createElement","className","classNames","onClick","PureComponent","ColorTile","wrong","GameOver","targetSequence","userSequence","hide","onClose","map","index","src_ColorTile","key","constants","litDuration","red","yellow","blue","green","randomColor","options","Math","floor","random","length","initialState","litColor","buildingTargetSequence","gameOver","Simon","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","objectSpread","next","bind","assertThisInitialized","press","light","reinitialize","audios","Audio","concat","setState","push","i","timeout","set","callback","console","log","play","_this2","_this$state2","src_GameOver","Button_Button","ReactDOM","render","Simon_Simon","document","getElementById"],"mappings":"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","file":"static/js/main.d37eb361.chunk.js","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nexport default class Button extends PureComponent {\r\n    render() {\r\n        const { color, lit, onPress } = this.props;\r\n        \r\n        return (\r\n            <div className={classNames('button', color, { lit })} onClick={() => onPress(color)} />\r\n        );\r\n    }\r\n}\r\n\r\nButton.propTypes = {\r\n    color: PropTypes.string.isRequired,\r\n    lit: PropTypes.bool.isRequired,\r\n    onPress: PropTypes.func.isRequired,\r\n};\r\n","import React, { PureComponent } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nclass ColorTile extends PureComponent {\r\n    render() {\r\n        const { color, wrong } = this.props;\r\n\r\n        return (\r\n            <div className={classNames('colorTile', color, 'lit', { wrong })}>\r\n                {wrong ? ':(' : ':)'}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ColorTile;\r\n","import React, { PureComponent } from 'react';\r\nimport ColorTile from './ColorTile';\r\nimport classNames from 'classnames';\r\n\r\nclass GameOver extends PureComponent {\r\n    render() {\r\n        const { targetSequence, userSequence, hide, onClose } = this.props;\r\n\r\n        return (\r\n            <div className={classNames('gameOver', { hide })}>\r\n                <div className=\"gameOverMessage\">\r\n                    GAME OVER\r\n                </div>\r\n                <div className=\"sequence\">\r\n                    {targetSequence.map((color, index) => (\r\n                        <ColorTile key={index} color={color} wrong={userSequence[index] !== color} />\r\n                    ))}\r\n                </div>\r\n                <button className=\"playAgain\" onClick={onClose}>\r\n                        PLAY AGAIN!\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GameOver;\r\n","export default {\r\n    litDuration: 500,\r\n    red: 'red',\r\n    yellow: 'yellow',\r\n    blue: 'blue',\r\n    green: 'green',\r\n};\r\n","import constants from './constants';\r\n\r\nexport function randomColor() {\r\n    const options = [constants.blue, constants.green, constants.yellow, constants.red];\r\n\r\n    return options[Math.floor(Math.random()*options.length)];\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport classNames from 'classnames';\r\nimport timeout from 'await-timeout';\r\nimport Button from './Button';\r\nimport GameOver from './GameOver';\r\nimport constants from './constants';\r\nimport {randomColor} from './utility';\r\n\r\nimport './assets/Simon.css';\r\n\r\nconst initialState = {\r\n    targetSequence: [],\r\n    userSequence: [],\r\n    litColor: null,\r\n    buildingTargetSequence: false,    \r\n    gameOver: false,                \r\n};\r\n\r\nexport default class Simon extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {...initialState};\r\n\r\n        this.next = this.next.bind(this);\r\n        this.press = this.press.bind(this);\r\n        this.light = this.light.bind(this);\r\n        this.reinitialize = this.reinitialize.bind(this);\r\n\r\n        this.audios = {};\r\n        this.audios[constants.yellow] = new Audio(`./audio/${constants.yellow}.mp3`);\r\n        this.audios[constants.blue] = new Audio(`./audio/${constants.blue}.mp3`);\r\n        this.audios[constants.green] = new Audio(`./audio/${constants.green}.mp3`);\r\n        this.audios[constants.red] = new Audio(`./audio/${constants.red}.mp3`);\r\n    }\r\n\r\n    async next() {\r\n        this.setState({\r\n            buildingTargetSequence: true,\r\n        });\r\n\r\n        const targetSequence = [...this.state.targetSequence];\r\n        const color = randomColor();\r\n\r\n        targetSequence.push(color);\r\n\r\n        this.setState({\r\n            targetSequence,\r\n        });\r\n\r\n        for (let i = 0; i < targetSequence.length; i++) {\r\n            await this.light(targetSequence[i]);\r\n        }\r\n\r\n        this.setState({\r\n            buildingTargetSequence: false,\r\n        });\r\n    }\r\n\r\n    async press(color) {\r\n        const { targetSequence, buildingTargetSequence, litColor } = this.state;\r\n        const userSequence = [...this.state.userSequence];\r\n\r\n        if (targetSequence.length === 0 || buildingTargetSequence || litColor || targetSequence.length === userSequence.length) {\r\n            return;\r\n        }\r\n\r\n        userSequence.push(color);\r\n\r\n        for (let i = 0; i < userSequence.length; i++) {\r\n            if (targetSequence[i] !== userSequence[i]) {\r\n                this.setState({\r\n                    gameOver: true,\r\n                });\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            userSequence,\r\n        });\r\n\r\n        await this.light(color);\r\n\r\n        if (userSequence.length === targetSequence.length) {\r\n            await timeout.set(1000);\r\n            this.setState({\r\n                userSequence: [],\r\n            });\r\n            this.next();        \r\n        }\r\n    }\r\n\r\n    async light(color, callback) {\r\n        console.log(`Lighting ${color}`);\r\n        const audio = this.audios[color];\r\n        audio.play();\r\n        this.setState({\r\n            litColor: color,\r\n        });\r\n\r\n        await timeout.set(constants.litDuration);\r\n        this.setState({\r\n            litColor: null,\r\n        });\r\n        await timeout.set(constants.litDuration);\r\n\r\n        if (callback) {\r\n            callback();\r\n        }\r\n    }\r\n\r\n    reinitialize() {\r\n        this.setState({...initialState});\r\n    }\r\n\r\n    render() {\r\n        const { litColor, targetSequence, userSequence, gameOver } = this.state;\r\n\r\n        return (\r\n            <div className=\"simon\">\r\n                <button className={classNames('go', {hide: targetSequence.length > 0})} onClick={() => this.next()}>GO!</button>\r\n                <GameOver targetSequence={targetSequence} userSequence={userSequence} hide={gameOver === false} onClose={this.reinitialize} />\r\n                <Button \r\n                    color={constants.yellow} \r\n                    lit={litColor === constants.yellow}\r\n                    onPress={this.press} \r\n                />\r\n                <Button \r\n                    color={constants.green} \r\n                    lit={litColor === constants.green}\r\n                    onPress={this.press} \r\n                />\r\n                <Button \r\n                    color={constants.red} \r\n                    lit={litColor === constants.red}\r\n                    onPress={this.press} \r\n                />\r\n                <Button \r\n                    color={constants.blue} \r\n                    lit={litColor === constants.blue}\r\n                    onPress={this.press} \r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Simon from './Simon';\n\nReactDOM.render(<Simon />, document.getElementById('root'));\n"],"sourceRoot":""}