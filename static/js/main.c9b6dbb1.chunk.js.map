{"version":3,"sources":["Button.js","constants.js","utility.js","Simon.js","index.js"],"names":["Button","_this$props","this","props","color","lit","onPress","react_default","a","createElement","className","classNames","onClick","PureComponent","constants","litDuration","failLitDuration","red","yellow","blue","green","fail","randomColor","options","Math","floor","random","length","initialState","targetSequence","userSequence","litColor","buildingTargetSequence","finalSuccessCount","Simon","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","objectSpread","next","bind","assertThisInitialized","press","light","reinitialize","gameOver","audios","Audio","concat","soundsHack","setState","push","i","play","timeout","set","nextKey","keys","find","key","_this2","pause","callback","console","log","_this3","_this$state2","hide","Button_Button","ReactDOM","render","Simon_Simon","document","getElementById"],"mappings":"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","file":"static/js/main.c9b6dbb1.chunk.js","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nexport default class Button extends PureComponent {\r\n    render() {\r\n        const { color, lit, onPress } = this.props;\r\n        \r\n        return (\r\n            <button className={classNames('button', color, { lit })} onClick={() => onPress(color)} />\r\n        );\r\n    }\r\n}\r\n\r\nButton.propTypes = {\r\n    color: PropTypes.string.isRequired,\r\n    lit: PropTypes.bool.isRequired,\r\n    onPress: PropTypes.func.isRequired,\r\n};\r\n","export default {\r\n    litDuration: 500,\r\n    failLitDuration: 2000,\r\n    red: 'red',\r\n    yellow: 'yellow',\r\n    blue: 'blue',\r\n    green: 'green',\r\n    fail: 'fail',\r\n};\r\n","import constants from './constants';\r\n\r\nexport function randomColor() {\r\n    const options = [constants.blue, constants.green, constants.yellow, constants.red];\r\n\r\n    return options[Math.floor(Math.random()*options.length)];\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport classNames from 'classnames';\r\nimport timeout from 'await-timeout';\r\nimport Button from './Button';\r\nimport constants from './constants';\r\nimport {randomColor} from './utility';\r\n\r\nimport './assets/Simon.css';\r\n\r\nconst initialState = {\r\n    targetSequence: [],\r\n    userSequence: [],\r\n    litColor: null,\r\n    buildingTargetSequence: false,\r\n    finalSuccessCount: null,    \r\n};\r\n\r\nexport default class Simon extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {...initialState};\r\n\r\n        this.next = this.next.bind(this);\r\n        this.press = this.press.bind(this);\r\n        this.light = this.light.bind(this);\r\n        this.reinitialize = this.reinitialize.bind(this);\r\n        this.gameOver = this.gameOver.bind(this);\r\n\r\n        this.audios = {};\r\n        this.audios[constants.yellow] = new Audio(`./audio/${constants.yellow}.mp3`);\r\n        this.audios[constants.blue] = new Audio(`./audio/${constants.blue}.mp3`);\r\n        this.audios[constants.green] = new Audio(`./audio/${constants.green}.mp3`);\r\n        this.audios[constants.red] = new Audio(`./audio/${constants.red}.mp3`);\r\n        this.audios.fail = new Audio('./audio/fail.mp3');\r\n\r\n        const sounds = [constants.red, constants.blue, constants.yellow, constants.green, constants.fail];\r\n        \r\n        this.soundsHack = {};\r\n    }\r\n\r\n    async next() {\r\n        this.setState({\r\n            buildingTargetSequence: true,\r\n        });\r\n\r\n        const targetSequence = [...this.state.targetSequence];\r\n        const color = randomColor();\r\n\r\n        targetSequence.push(color);\r\n\r\n        this.setState({\r\n            targetSequence,\r\n        });\r\n\r\n        for (let i = 0; i < targetSequence.length; i++) {\r\n            await this.light(targetSequence[i]);\r\n        }\r\n\r\n        this.setState({\r\n            buildingTargetSequence: false,\r\n        });\r\n    }\r\n\r\n    async gameOver(color) {\r\n        const { targetSequence } = this.state;\r\n\r\n        const finalSuccessCount = targetSequence.length - 1;\r\n        const audio = this.audios.fail;\r\n        audio.play();\r\n        this.setState({\r\n            litColor: color,\r\n            finalSuccessCount,\r\n        });\r\n\r\n        await timeout.set(constants.failLitDuration);\r\n        this.setState({\r\n            litColor: null,\r\n        });\r\n        await timeout.set(constants);\r\n\r\n        this.reinitialize();\r\n    }\r\n\r\n    async press(color) {\r\n        const { targetSequence, buildingTargetSequence, litColor } = this.state;\r\n        const userSequence = [...this.state.userSequence];\r\n\r\n        if (targetSequence.length === 0 || buildingTargetSequence || litColor || targetSequence.length === userSequence.length) {\r\n            return;\r\n        }\r\n\r\n        // IOS allows only one sound to play per click.  We are hacking around that by playing and immediately pausing each\r\n        // sound on a click.    \r\n        const nextKey = Object.keys(this.audios).find(key => !this.soundsHack[key]);\r\n        if (nextKey) {\r\n            this.soundsHack[nextKey] = true;\r\n            this.audios[nextKey].play();\r\n            this.audios[nextKey].pause();\r\n        }        \r\n\r\n        userSequence.push(color);\r\n\r\n        for (let i = 0; i < userSequence.length; i++) {\r\n            if (targetSequence[i] !== userSequence[i]) {\r\n                this.gameOver(targetSequence[i]);\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            userSequence,\r\n        });\r\n\r\n        await this.light(color);\r\n\r\n        if (userSequence.length === targetSequence.length) {\r\n            await timeout.set(1000);\r\n            this.setState({\r\n                userSequence: [],\r\n            });\r\n            this.next();        \r\n        }\r\n    }\r\n\r\n    async light(color, callback) {\r\n        console.log(`Lighting ${color}`);\r\n        const audio = this.audios[color];\r\n        audio.play();\r\n        this.setState({\r\n            litColor: color,\r\n        });\r\n\r\n        await timeout.set(constants.litDuration);\r\n        this.setState({\r\n            litColor: null,\r\n        });\r\n        await timeout.set(constants.litDuration);\r\n\r\n        if (callback) {\r\n            callback();\r\n        }\r\n    }\r\n\r\n    reinitialize() {\r\n        this.setState({...initialState});\r\n    }\r\n\r\n    render() {\r\n        const { litColor, targetSequence, userSequence, finalSuccessCount } = this.state;\r\n\r\n        return (\r\n            <div className=\"simon\">\r\n                <button className={classNames('go', {hide: targetSequence.length > 0})} onClick={() => this.next()}>GO!</button>\r\n                <div className={classNames('successCount', {hide: finalSuccessCount === null})}>\r\n                    <div className=\"center\">{finalSuccessCount}</div>\r\n                </div>\r\n                <Button \r\n                    color={constants.yellow} \r\n                    lit={litColor === constants.yellow}\r\n                    onPress={this.press} \r\n                />\r\n                <Button \r\n                    color={constants.green} \r\n                    lit={litColor === constants.green}\r\n                    onPress={this.press} \r\n                />\r\n                <Button \r\n                    color={constants.red} \r\n                    lit={litColor === constants.red}\r\n                    onPress={this.press} \r\n                />\r\n                <Button \r\n                    color={constants.blue} \r\n                    lit={litColor === constants.blue}\r\n                    onPress={this.press} \r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Simon from './Simon';\r\n\r\nReactDOM.render(<Simon />, document.getElementById('root'));\r\n"],"sourceRoot":""}