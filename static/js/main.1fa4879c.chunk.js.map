{"version":3,"sources":["Button.js","constants.js","utility.js","Simon.js","index.js"],"names":["Button","_this$props","this","props","color","lit","onPress","react_default","a","createElement","className","classNames","onClick","PureComponent","constants","litDuration","failLitDuration","red","yellow","blue","green","fail","randomColor","options","Math","floor","random","length","initialState","targetSequence","userSequence","litColor","buildingTargetSequence","Simon","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","objectSpread","next","bind","assertThisInitialized","press","light","reinitialize","gameOver","audios","Audio","concat","soundsHack","setState","push","i","play","timeout","set","nextKey","keys","find","key","_this2","pause","callback","console","log","_this3","_this$state2","hide","Button_Button","ReactDOM","render","Simon_Simon","document","getElementById"],"mappings":"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","file":"static/js/main.1fa4879c.chunk.js","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nexport default class Button extends PureComponent {\r\n    render() {\r\n        const { color, lit, onPress } = this.props;\r\n        \r\n        return (\r\n            <button className={classNames('button', color, { lit })} onClick={() => onPress(color)} />\r\n        );\r\n    }\r\n}\r\n\r\nButton.propTypes = {\r\n    color: PropTypes.string.isRequired,\r\n    lit: PropTypes.bool.isRequired,\r\n    onPress: PropTypes.func.isRequired,\r\n};\r\n","export default {\r\n    litDuration: 500,\r\n    failLitDuration: 2000,\r\n    red: 'red',\r\n    yellow: 'yellow',\r\n    blue: 'blue',\r\n    green: 'green',\r\n    fail: 'fail',\r\n};\r\n","import constants from './constants';\r\n\r\nexport function randomColor() {\r\n    const options = [constants.blue, constants.green, constants.yellow, constants.red];\r\n\r\n    return options[Math.floor(Math.random()*options.length)];\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport classNames from 'classnames';\r\nimport timeout from 'await-timeout';\r\nimport Button from './Button';\r\nimport constants from './constants';\r\nimport {randomColor} from './utility';\r\n\r\nimport './assets/Simon.css';\r\n\r\nconst initialState = {\r\n    targetSequence: [],\r\n    userSequence: [],\r\n    litColor: null,\r\n    buildingTargetSequence: false,    \r\n};\r\n\r\nexport default class Simon extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {...initialState};\r\n\r\n        this.next = this.next.bind(this);\r\n        this.press = this.press.bind(this);\r\n        this.light = this.light.bind(this);\r\n        this.reinitialize = this.reinitialize.bind(this);\r\n        this.gameOver = this.gameOver.bind(this);\r\n\r\n        this.audios = {};\r\n        this.audios[constants.yellow] = new Audio(`./audio/${constants.yellow}.mp3`);\r\n        this.audios[constants.blue] = new Audio(`./audio/${constants.blue}.mp3`);\r\n        this.audios[constants.green] = new Audio(`./audio/${constants.green}.mp3`);\r\n        this.audios[constants.red] = new Audio(`./audio/${constants.red}.mp3`);\r\n        this.audios.fail = new Audio('./audio/fail.mp3');\r\n\r\n        const sounds = [constants.red, constants.blue, constants.yellow, constants.green, constants.fail];\r\n        \r\n        this.soundsHack = {};\r\n    }\r\n\r\n    async next() {\r\n        this.setState({\r\n            buildingTargetSequence: true,\r\n        });\r\n\r\n        const targetSequence = [...this.state.targetSequence];\r\n        const color = randomColor();\r\n\r\n        targetSequence.push(color);\r\n\r\n        this.setState({\r\n            targetSequence,\r\n        });\r\n\r\n        for (let i = 0; i < targetSequence.length; i++) {\r\n            await this.light(targetSequence[i]);\r\n        }\r\n\r\n        this.setState({\r\n            buildingTargetSequence: false,\r\n        });\r\n    }\r\n\r\n    async gameOver(color) {\r\n        const audio = this.audios.fail;\r\n        audio.play();\r\n        this.setState({\r\n            litColor: color,\r\n        });\r\n\r\n        await timeout.set(constants.failLitDuration);\r\n        this.setState({\r\n            litColor: null,\r\n        });\r\n        await timeout.set(constants);\r\n\r\n        this.reinitialize();\r\n    }\r\n\r\n    async press(color) {\r\n        const { targetSequence, buildingTargetSequence, litColor } = this.state;\r\n        const userSequence = [...this.state.userSequence];\r\n\r\n        if (targetSequence.length === 0 || buildingTargetSequence || litColor || targetSequence.length === userSequence.length) {\r\n            return;\r\n        }\r\n\r\n        // IOS allows only one sound to play per click.  We are hacking around that by playing and immediately pausing each\r\n        // sound on a click.    \r\n        const nextKey = Object.keys(this.audios).find(key => !this.soundsHack[key]);\r\n        if (nextKey) {\r\n            this.soundsHack[nextKey] = true;\r\n            this.audios[nextKey].play();\r\n            this.audios[nextKey].pause();\r\n        }        \r\n\r\n        userSequence.push(color);\r\n\r\n        for (let i = 0; i < userSequence.length; i++) {\r\n            if (targetSequence[i] !== userSequence[i]) {\r\n                this.gameOver(targetSequence[i]);\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            userSequence,\r\n        });\r\n\r\n        await this.light(color);\r\n\r\n        if (userSequence.length === targetSequence.length) {\r\n            await timeout.set(1000);\r\n            this.setState({\r\n                userSequence: [],\r\n            });\r\n            this.next();        \r\n        }\r\n    }\r\n\r\n    async light(color, callback) {\r\n        console.log(`Lighting ${color}`);\r\n        const audio = this.audios[color];\r\n        audio.play();\r\n        this.setState({\r\n            litColor: color,\r\n        });\r\n\r\n        await timeout.set(constants.litDuration);\r\n        this.setState({\r\n            litColor: null,\r\n        });\r\n        await timeout.set(constants.litDuration);\r\n\r\n        if (callback) {\r\n            callback();\r\n        }\r\n    }\r\n\r\n    reinitialize() {\r\n        this.setState({...initialState});\r\n    }\r\n\r\n    render() {\r\n        const { litColor, targetSequence, userSequence } = this.state;\r\n\r\n        return (\r\n            <div className=\"simon\">\r\n                <button className={classNames('go', {hide: targetSequence.length > 0})} onClick={() => this.next()}>GO!</button>\r\n                <Button \r\n                    color={constants.yellow} \r\n                    lit={litColor === constants.yellow}\r\n                    onPress={this.press} \r\n                />\r\n                <Button \r\n                    color={constants.green} \r\n                    lit={litColor === constants.green}\r\n                    onPress={this.press} \r\n                />\r\n                <Button \r\n                    color={constants.red} \r\n                    lit={litColor === constants.red}\r\n                    onPress={this.press} \r\n                />\r\n                <Button \r\n                    color={constants.blue} \r\n                    lit={litColor === constants.blue}\r\n                    onPress={this.press} \r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Simon from './Simon';\n\nReactDOM.render(<Simon />, document.getElementById('root'));\n"],"sourceRoot":""}